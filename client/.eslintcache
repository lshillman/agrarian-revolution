[{"/Users/mary/Desktop/agrarian-revolution/client/src/index.js":"1","/Users/mary/Desktop/agrarian-revolution/client/src/App.js":"2","/Users/mary/Desktop/agrarian-revolution/client/src/pages/Profile.js":"3","/Users/mary/Desktop/agrarian-revolution/client/src/pages/Conversation.js":"4","/Users/mary/Desktop/agrarian-revolution/client/src/pages/MyVeggies.js":"5","/Users/mary/Desktop/agrarian-revolution/client/src/pages/Search.js":"6","/Users/mary/Desktop/agrarian-revolution/client/src/components/LoginForm.js":"7","/Users/mary/Desktop/agrarian-revolution/client/src/components/AddVeggieForm.js":"8","/Users/mary/Desktop/agrarian-revolution/client/src/components/Header.js":"9","/Users/mary/Desktop/agrarian-revolution/client/src/components/SignupForm.js":"10","/Users/mary/Desktop/agrarian-revolution/client/src/components/Footer.js":"11","/Users/mary/Desktop/agrarian-revolution/client/src/pages/Requests.js":"12","/Users/mary/Desktop/agrarian-revolution/client/src/components/VeggieRequests.js":"13","/Users/mary/Desktop/agrarian-revolution/client/src/components/VeggiesList.js":"14","/Users/mary/Desktop/agrarian-revolution/client/src/components/VeggiePopup.js":"15","/Users/mary/Desktop/agrarian-revolution/client/src/utils/mutations.js":"16","/Users/mary/Desktop/agrarian-revolution/client/src/utils/auth.js":"17","/Users/mary/Desktop/agrarian-revolution/client/src/utils/icons.js":"18","/Users/mary/Desktop/agrarian-revolution/client/src/utils/queries.js":"19","/Users/mary/Desktop/agrarian-revolution/client/src/components/VeggieResponses.js":"20","/Users/mary/Desktop/agrarian-revolution/client/src/components/OutgoingRequests.js":"21"},{"size":266,"mtime":1662164520643,"results":"22","hashOfConfig":"23"},{"size":2325,"mtime":1662316170448,"results":"24","hashOfConfig":"23"},{"size":93,"mtime":1661983005814,"results":"25","hashOfConfig":"23"},{"size":103,"mtime":1661983005814,"results":"26","hashOfConfig":"23"},{"size":1324,"mtime":1662311095646,"results":"27","hashOfConfig":"23"},{"size":3755,"mtime":1662311095647,"results":"28","hashOfConfig":"23"},{"size":3203,"mtime":1662311095644,"results":"29","hashOfConfig":"23"},{"size":5669,"mtime":1662324628621,"results":"30","hashOfConfig":"23"},{"size":1757,"mtime":1662325155557,"results":"31","hashOfConfig":"23"},{"size":5479,"mtime":1662311095645,"results":"32","hashOfConfig":"23"},{"size":214,"mtime":1662311095644,"results":"33","hashOfConfig":"23"},{"size":3170,"mtime":1662317649656,"results":"34","hashOfConfig":"23"},{"size":3107,"mtime":1662316170448,"results":"35","hashOfConfig":"23"},{"size":757,"mtime":1662311095645,"results":"36","hashOfConfig":"23"},{"size":772,"mtime":1662169752064,"results":"37","hashOfConfig":"23"},{"size":1410,"mtime":1662311095647,"results":"38","hashOfConfig":"23"},{"size":876,"mtime":1662311095647,"results":"39","hashOfConfig":"23"},{"size":6245,"mtime":1662064728360,"results":"40","hashOfConfig":"23"},{"size":2454,"mtime":1662321978194,"results":"41","hashOfConfig":"23"},{"size":581,"mtime":1662316170448,"results":"42","hashOfConfig":"23"},{"size":2723,"mtime":1662322039262,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"atkpbv",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},"/Users/mary/Desktop/agrarian-revolution/client/src/index.js",[],["90","91"],"/Users/mary/Desktop/agrarian-revolution/client/src/App.js",["92"],"import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Search from './pages/Search';\nimport MyVeggies from './pages/MyVeggies';\nimport Requests from './pages/Requests';\nimport Conversation from './pages/Conversation';\nimport Profile from './pages/Profile';\nimport SignupForm from './components/SignupForm';\nimport LoginForm from './components/LoginForm';\nimport AddVeggieForm from './components/AddVeggieForm';\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from \"@apollo/client\"\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { setContext } from '@apollo/client/link/context';\nimport VeggiesRequests from './components/VeggieRequests';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Header />\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<Search/>}\n            />\n            <Route\n              path=\"/veggies\"\n              element={<MyVeggies/>}\n            />\n            <Route\n              path=\"/requests\"\n              element={<Requests/>}\n            />\n            <Route\n              path=\"/requests/:requestId\"\n              element={<VeggiesRequests />}\n            />\n            <Route\n              path=\"/profile/:username\"\n              element={<Profile/>}\n            />\n            <Route\n              path=\"/addveggie\"\n              element={<AddVeggieForm />}\n            />\n            <Route\n              path=\"/signup\"\n              element={<SignupForm/>}\n            />\n            <Route\n              path=\"/login\"\n              element={<LoginForm />}\n            />\n          </Routes>\n          <Footer />\n        </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/mary/Desktop/agrarian-revolution/client/src/pages/Profile.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/pages/Conversation.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/pages/MyVeggies.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/pages/Search.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/components/LoginForm.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/components/AddVeggieForm.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/components/Header.js",["93"],"/Users/mary/Desktop/agrarian-revolution/client/src/components/SignupForm.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/components/Footer.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/pages/Requests.js",["94","95","96"],"import React, { useState } from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from \"../utils/queries\";\nimport VeggiesRequests from \"../components/VeggieRequests\";\nimport { Link } from \"react-router-dom\";\nimport icons from \"../utils/icons\";\nimport moment from \"moment\";\nimport OutgoingRequests from \"../components/OutgoingRequests\";\n\n\n\nexport default function Requests() {\n    // Query our current user's array of veggies\n    const { loading, data } = useQuery(QUERY_USER, { variables: { _id: localStorage.getItem('_id') } });\n    const veggiesRequests = data?.user[0].veggies || [];\n\n\n    // Ability to display responses\n    const [showResponses, setShowResponses] = useState(false);\n    // button id\n    const [btnId, setBtnId] = useState(\"\");\n\n\n\n    const displayResponses = (e) => {\n        setBtnId(e.currentTarget.id);\n        setShowResponses(prev => !prev);\n    }\n\n    return (\n        <main>\n            <h1>Requests</h1>\n            {loading ? (<div>Loading...</div>) : (\n                <div className=\"requests-list\">\n                    {/* traverse the user's veggies */}\n                    {veggiesRequests.map((veggie, i) => {\n                        if (veggie.requests.length) {\n                            return <div className=\"single-request\" key={i}>\n                                <div className=\"single-request-header\">\n                                    {/* <img src={icons[veggie.type].options.iconUrl} alt=\"veggie icon\" /> */}\n                                    {/* <h2>Someone wants your {veggie.type}</h2> */}\n                                </div>\n                                <div>\n                                    {/* traverse the user's veggies' requests array */}\n                                    {veggie.requests.map((req, i) => (\n                                        <>\n                                            <div className=\"single-response\">\n                                                <img src={icons[veggie.type].options.iconUrl} alt=\"veggie icon\" />\n                                                <p className=\"sender-meta\"><strong>{req.requestor.username}</strong> <span className=\"message-timestamp\">{moment(req.timestamp).fromNow()}</span></p>\n                                                <p>{req.content}</p>\n                                            </div>\n                                            <button className=\"delete-veggie-btn\" id={req._id} onClick={(e) => displayResponses(e)}>\n                                                <Link to={`/requests/${req._id}`}>\n                                                    Respond\n                                                </Link>\n                                            </button>\n                                        </>\n                                    ))}\n                                </div>\n                            </div>\n                        }\n                        return <></>\n                    })}\n                    <OutgoingRequests data={data} />\n                </div>)\n            }\n        </main>\n    )\n}\n// populate page with incoming requests (requests in my veggies)","/Users/mary/Desktop/agrarian-revolution/client/src/components/VeggieRequests.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/components/VeggiesList.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/components/VeggiePopup.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/utils/mutations.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/utils/auth.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/utils/icons.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/utils/queries.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/components/VeggieResponses.js",[],"/Users/mary/Desktop/agrarian-revolution/client/src/components/OutgoingRequests.js",["97","98","99","100","101","102","103","104","105"],"import React, { useRef, useState } from \"react\";\nimport moment from \"moment\";\nimport VeggieResponses from \"./VeggieResponses\";\nimport icons from \"../utils/icons\";\nimport { useParams } from \"react-router-dom\";\nimport { QUERY_REQUEST } from \"../utils/queries\";\nimport { useMutation, useQuery } from '@apollo/client';\nimport { Link } from \"react-router-dom\";\nimport Requests from \"../pages/Requests\";\n\n\nexport default function OutgoingRequests(props) {\n\n\n    const outgoingRequests = props.data.user[0].sent_requests\n    console.log(outgoingRequests)\n\n\n\n    return (\n        <main>\n            <h2>Veggies I Want</h2>\n            <div className=\"requests-list\">\n                {/* traverse the user's veggies */}\n                {/* if (outgoingRequests.length) */}\n                {outgoingRequests.map((request, i) => {\n                    return <div className=\"single-request\" key={i}>\n                        <div className=\"single-request-header\">\n                            <img src={icons[request.veggie.type].options.iconUrl} alt=\"veggie icon\" />\n                            <h2>Request for {request.veggie.owner.username}'s {request.veggie.type}</h2>\n                        </div>\n                        <div>\n                            {/* traverse the user's veggies' requests array */}\n                            {request.responses.length ? request.responses[request.responses.length - 1].content : request.content}\n                            {console.log(request.content)}\n\n                            {/* <> \n                                            <div className=\"single-response\">\n                                                <p className=\"sender-meta\"><strong>{req.requestor.username}</strong> <span className=\"message-timestamp\">{moment(req.timestamp).fromNow()}</span></p>\n                                                <p>{req.content}</p>\n                                            </div>\n                                            <button className=\"delete-veggie-btn\" id={req._id}>\n                                                <Link to={`/requests/${req._id}`}>\n                                                    Respond\n                                                </Link>\n                                            </button>\n                                        </> */}\n                            <button className=\"delete-veggie-btn\" id={request._id}>\n                                <Link to={`/requests/${request._id}`}>\n                                    Respond\n                                </Link>\n                            </button>\n\n                        </div>\n                    </div>\n\n                })}\n            </div>\n        </main>\n    )\n\n\n\n}",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":20},{"ruleId":"110","severity":1,"message":"114","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":16},{"ruleId":"110","severity":1,"message":"115","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":23},{"ruleId":"110","severity":1,"message":"116","line":19,"column":12,"nodeType":"112","messageId":"113","endLine":19,"endColumn":25},{"ruleId":"110","severity":1,"message":"117","line":21,"column":12,"nodeType":"112","messageId":"113","endLine":21,"endColumn":17},{"ruleId":"110","severity":1,"message":"118","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":23},{"ruleId":"110","severity":1,"message":"119","line":1,"column":25,"nodeType":"112","messageId":"113","endLine":1,"endColumn":33},{"ruleId":"110","severity":1,"message":"120","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"121","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":23},{"ruleId":"110","severity":1,"message":"122","line":5,"column":10,"nodeType":"112","messageId":"113","endLine":5,"endColumn":19},{"ruleId":"110","severity":1,"message":"123","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":23},{"ruleId":"110","severity":1,"message":"124","line":7,"column":10,"nodeType":"112","messageId":"113","endLine":7,"endColumn":21},{"ruleId":"110","severity":1,"message":"125","line":7,"column":23,"nodeType":"112","messageId":"113","endLine":7,"endColumn":31},{"ruleId":"110","severity":1,"message":"126","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":16},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Conversation' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'VeggiesRequests' is defined but never used.","'showResponses' is assigned a value but never used.","'btnId' is assigned a value but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'moment' is defined but never used.","'VeggieResponses' is defined but never used.","'useParams' is defined but never used.","'QUERY_REQUEST' is defined but never used.","'useMutation' is defined but never used.","'useQuery' is defined but never used.","'Requests' is defined but never used.","no-global-assign","no-unsafe-negation"]