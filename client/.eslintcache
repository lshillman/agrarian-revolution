[{"/Users/laura/Desktop/agrarian-revolution/client/src/index.js":"1","/Users/laura/Desktop/agrarian-revolution/client/src/App.js":"2","/Users/laura/Desktop/agrarian-revolution/client/src/pages/MyVeggies.js":"3","/Users/laura/Desktop/agrarian-revolution/client/src/components/SignupForm.js":"4","/Users/laura/Desktop/agrarian-revolution/client/src/pages/Search.js":"5","/Users/laura/Desktop/agrarian-revolution/client/src/components/LoginForm.js":"6","/Users/laura/Desktop/agrarian-revolution/client/src/components/Footer.js":"7","/Users/laura/Desktop/agrarian-revolution/client/src/pages/Conversation.js":"8","/Users/laura/Desktop/agrarian-revolution/client/src/pages/Profile.js":"9","/Users/laura/Desktop/agrarian-revolution/client/src/components/Header.js":"10","/Users/laura/Desktop/agrarian-revolution/client/src/pages/Requests.js":"11","/Users/laura/Desktop/agrarian-revolution/client/src/components/VeggiePopup.js":"12","/Users/laura/Desktop/agrarian-revolution/client/src/components/AddVeggieForm.js":"13","/Users/laura/Desktop/agrarian-revolution/client/src/components/VeggiesList.js":"14","/Users/laura/Desktop/agrarian-revolution/client/src/utils/queries.js":"15","/Users/laura/Desktop/agrarian-revolution/client/src/utils/mutations.js":"16","/Users/laura/Desktop/agrarian-revolution/client/src/utils/auth.js":"17","/Users/laura/Desktop/agrarian-revolution/client/src/utils/icons.js":"18"},{"size":219,"mtime":1662165749853,"results":"19","hashOfConfig":"20"},{"size":2121,"mtime":1662165749851,"results":"21","hashOfConfig":"20"},{"size":100,"mtime":1662165749854,"results":"22","hashOfConfig":"20"},{"size":5550,"mtime":1662165749853,"results":"23","hashOfConfig":"20"},{"size":2549,"mtime":1662165749855,"results":"24","hashOfConfig":"20"},{"size":3214,"mtime":1662165749853,"results":"25","hashOfConfig":"20"},{"size":105,"mtime":1662165749852,"results":"26","hashOfConfig":"20"},{"size":103,"mtime":1662165749854,"results":"27","hashOfConfig":"20"},{"size":93,"mtime":1662165749854,"results":"28","hashOfConfig":"20"},{"size":892,"mtime":1662165749852,"results":"29","hashOfConfig":"20"},{"size":95,"mtime":1662165749855,"results":"30","hashOfConfig":"20"},{"size":772,"mtime":1662167659087,"results":"31","hashOfConfig":"20"},{"size":5621,"mtime":1662165749852,"results":"32","hashOfConfig":"20"},{"size":900,"mtime":1662168284946,"results":"33","hashOfConfig":"20"},{"size":402,"mtime":1662165749865,"results":"34","hashOfConfig":"20"},{"size":1111,"mtime":1662165749865,"results":"35","hashOfConfig":"20"},{"size":920,"mtime":1662165749855,"results":"36","hashOfConfig":"20"},{"size":6245,"mtime":1662165749855,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"gzbeta",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/laura/Desktop/agrarian-revolution/client/src/index.js",[],["80","81"],"/Users/laura/Desktop/agrarian-revolution/client/src/App.js",["82"],"import React, {useState} from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Search from './pages/Search';\nimport MyVeggies from './pages/MyVeggies';\nimport Requests from './pages/Requests';\nimport Conversation from './pages/Conversation';\nimport Profile from './pages/Profile';\nimport SignupForm from './components/SignupForm';\nimport LoginForm from './components/LoginForm';\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from \"@apollo/client\"\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { setContext } from '@apollo/client/link/context';\n\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\nfunction App() {\n\n  return (\n    <ApolloProvider client={client}>\n        <Router>\n          <Header />\n\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<Search/>}\n            />\n            <Route\n              path=\"/veggies\"\n              element={<MyVeggies/>}\n            />\n            <Route\n              path=\"/requests\"\n              element={<Requests/>}\n            />\n            <Route\n              path=\"/requests/:requestId\"\n              element={<Conversation/>}\n            />\n            <Route\n              path=\"/profile/:username\"\n              element={<Profile/>}\n            />\n\n            <Route\n              path=\"/signup\"\n              element={<SignupForm/>}\n            />\n            <Route\n              path=\"/login\"\n              element={<LoginForm />}\n            />\n          </Routes>\n\n          <Footer />\n        </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/laura/Desktop/agrarian-revolution/client/src/pages/MyVeggies.js",[],"/Users/laura/Desktop/agrarian-revolution/client/src/components/SignupForm.js",["83"],"import React, { useEffect, useState } from 'react';\n// import { Form, Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { CREATE_USER } from \"../utils/mutations\"\nimport { useMutation } from \"@apollo/client\"\nimport Auth from '../utils/auth';\n\n\n\nconst SignupForm = () => {\n    const [formState, setFormState] = useState({\n        username: '',\n        email: '',\n        password: '',\n        street: '',\n        crossStreet: '',\n        zipcode: ''\n    });\n    const [createUser, { error, data }] = useMutation(CREATE_USER);\n\n    // update state based on form input changes\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value\n        });\n    };\n\n    // submit form\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const location = `${formState.street} and ${formState.crossStreet} ${formState.zipcode}`\n\n            const { data } = await createUser({\n                variables: { ...formState, location },\n            });\n            console.log(data.createUser.user);\n\n            localStorage.setItem(\"_id\", data.createUser.user._id);\n            localStorage.setItem(\"username\", data.createUser.user.username);\n            localStorage.setItem(\"email\", data.createUser.user.email);\n            localStorage.setItem(\"location\", data.createUser.user.location);\n            localStorage.setItem(\"coordinates\", JSON.stringify(data.createUser.user.coordinates));\n\n            Auth.login(data.createUser.token);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    return (\n\n        <main className=\"flex-row justify-center mb-4\">\n            <div className=\"col-12 col-lg-10\">\n                <div className=\"card\">\n                    <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n                    <div className=\"card-body\">\n                        {data ? (\n                            <p>\n                                Success! You may now head{' '}\n                                <Link to=\"/\">back to the homepage.</Link>\n                            </p>\n                        ) : (\n                            <form onSubmit={handleFormSubmit}>\n                                <input\n                                    className=\"form-input\"\n                                    placeholder=\"Your username\"\n                                    name=\"username\"\n                                    type=\"text\"\n                                    value={formState.username}\n                                    onChange={handleChange}\n                                />\n                                <input\n                                    className=\"form-input\"\n                                    placeholder=\"Your email\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    value={formState.email}\n                                    onChange={handleChange}\n                                />\n                                <input\n                                    className=\"form-input\"\n                                    placeholder=\"******\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    value={formState.password}\n                                    onChange={handleChange}\n                                />\n                                <input\n                                    className=\"form-input\"\n                                    placeholder=\"street\"\n                                    name=\"street\"\n                                    type=\"text\"\n                                    value={formState.street}\n                                    onChange={handleChange}\n                                />\n                                <input\n                                    className=\"form-input\"\n                                    placeholder=\"cross street\"\n                                    name=\"crossStreet\"\n                                    type=\"text\"\n                                    value={formState.crossStreet}\n                                    onChange={handleChange}\n                                />\n                                <input\n                                    className=\"form-input\"\n                                    placeholder=\"zip code\"\n                                    name=\"zipcode\"\n                                    type=\"text\"\n                                    value={formState.zipcode}\n                                    onChange={handleChange}\n                                />\n\n                                <button\n                                    className=\"btn btn-block btn-info\"\n                                    style={{ cursor: 'pointer' }}\n                                    type=\"submit\"\n                                >\n                                    Submit\n                                </button>\n                            </form>\n                        )}\n\n                        {error && (\n                            <div className=\"my-3 p-3 bg-danger text-white\">\n                                {error.message}\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </main>\n\n    )\n}\n\nexport default SignupForm;","/Users/laura/Desktop/agrarian-revolution/client/src/pages/Search.js",["84","85","86"],"import React, { useRef, useState } from 'react';\nimport { useQuery } from '@apollo/client';\n// import { Link } from 'react-router-dom';\nimport VeggiesList from '../components/VeggiesList';\nimport VeggiePopup from '../components/VeggiePopup';\nimport AddVeggieForm from '../components/AddVeggieForm';\nimport { QUERY_VEGGIES } from '../utils/queries';\n\n\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from 'react-leaflet';\nimport icons from '../utils/icons';\n\nconst Search = () => {\n  const { loading, data } = useQuery(QUERY_VEGGIES);\n  const veggies = data?.veggies || [];\n\n  const selectedVeggie = useRef(null);\n  const [veggieClicked, setVeggieClicked] = useState(false);\n\n  const mapRef = useRef(null);\n  const markerRef = useRef(new Array());\n\n  const onClickShowMarker = (veggieIndex) => {\n    const map = mapRef.current\n    if (!map) {\n      return\n    }\n\n    // map.flyTo(veggie.coordinates, 13)\n    const marker = markerRef.current[veggieIndex]\n    if (marker) {\n      marker.openPopup()\n    }\n  }\n\n  return (\n    <main style={{ maxWidth: \"1200px\", display: \"flex\" }}>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          <div style={{ flexBasis: \"20%\" }}>\n            <VeggiesList veggies={veggies} veggieClicked={veggieClicked} selectedVeggie={selectedVeggie} onClickShowMarker={onClickShowMarker} />\n          </div>\n\n          <div style={{ flexBasis: \"80%\" }}>\n            <MapContainer center={JSON.parse(localStorage.getItem(\"coordinates\"))} zoom={13} style={{ height: \"500px\" }} whenCreated={(map) => mapRef.current = map}>\n              {/* <LocationMarker /> */}\n              <TileLayer\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n\n              {veggies.map((veggie, key) => (\n\n                  <Marker key={key} ref={(element) => markerRef.current.push(element)} position={veggie.coordinates} icon={icons[veggie.type]} data={veggie._id} eventHandlers={{\n                    click: (e) => {\n                      selectedVeggie.current = e.target.options.data;\n                      setVeggieClicked(true);\n                    },\n                  }}>\n                    <VeggiePopup veggie={veggie} />\n                  </Marker>\n\n              ))}\n            </MapContainer>\n          </div>\n          \n          <AddVeggieForm />\n          \n        </>\n        \n      )}\n    </main>\n  );\n};\n\nexport default Search;","/Users/laura/Desktop/agrarian-revolution/client/src/components/LoginForm.js",["87"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\n\nimport Auth from '../utils/auth';\n\nconst LoginForm = ({setUserInfo, userInfo}) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    \n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      // TODO: set all the user info\n      // setUserInfo({\n      //   _id: data.login.user._id,\n      //   username: data.login.user.username,\n      //   email: data.login.user.email,\n      //   location: data.login.user.location,\n      //   coordinates: data.login.user.coordinates\n      // })\n      localStorage.setItem(\"_id\", data.login.user._id);\n      localStorage.setItem(\"username\", data.login.user.username);\n      localStorage.setItem(\"email\", data.login.user.email);\n      localStorage.setItem(\"location\", data.login.user.location);\n      localStorage.setItem(\"coordinates\", JSON.stringify(data.login.user.coordinates));\n      \n      // console.log(userInfo);\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default LoginForm;","/Users/laura/Desktop/agrarian-revolution/client/src/components/Footer.js",[],"/Users/laura/Desktop/agrarian-revolution/client/src/pages/Conversation.js",[],"/Users/laura/Desktop/agrarian-revolution/client/src/pages/Profile.js",[],"/Users/laura/Desktop/agrarian-revolution/client/src/components/Header.js",[],"/Users/laura/Desktop/agrarian-revolution/client/src/pages/Requests.js",[],"/Users/laura/Desktop/agrarian-revolution/client/src/components/VeggiePopup.js",[],"/Users/laura/Desktop/agrarian-revolution/client/src/components/AddVeggieForm.js",["88","89"],"import React, { useState } from 'react';\nimport { CREATE_VEGGIE } from \"../utils/mutations\"\nimport { useMutation } from \"@apollo/client\"\nimport { QUERY_VEGGIES } from '../utils/queries';\n\n\nconst AddVeggieForm = () => {\n\n    const [formState, setFormState] = useState({\n        type: '',\n        quantity: '',\n        photo: '',\n        description: '',\n    });\n\n    const [createVeggie, { error, data }] = useMutation(CREATE_VEGGIE)\n\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value\n        });\n    };\n\n\n    // submit form\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const owner = localStorage.getItem('_id');\n            const location = localStorage.getItem('location');\n            const coordinates = JSON.parse(localStorage.getItem('coordinates'));\n            const quantity = formState.quantity * 1\n\n            console.log({ ...formState, owner, location, coordinates })\n            console.log(formState)\n            await createVeggie({\n                variables: { ...formState, owner, location, coordinates, quantity },\n            });\n            window.location.reload();\n            // console.log(data)\n\n            // Auth.login(data.createUser.token);\n            \n        } catch (e) {\n            console.error(e);\n        }\n\n    };\n\n    return (\n        <>\n        \n            <h1>Add a Veggie</h1>\n            <form onSubmit={handleFormSubmit}>\n                <select name='type' onChange={handleChange}>\n                    <option>select one</option>\n                    <option value=\"apples\">apples</option>\n                    <option value=\"artichokes\">artichokes</option>\n                    <option value=\"asparagus\">asparagus</option>\n                    <option value=\"avocados\">avocados</option>\n                    <option value=\"basil\">basil</option>\n                    <option value=\"drybeans\">beans - dry</option>\n                    <option value=\"green\">beans - green</option>\n                    <option value=\"beets\">beets</option>\n                    <option value=\"bokchoy\">bok choy</option>\n                    <option value=\"broccoli\">broccoli</option>\n                    <option value=\"cabbage\">cabbage</option>\n                    <option value=\"carrots\">carrots</option>\n                    <option value=\"cauliflower\">cauliflower</option>\n                    <option value=\"celery\">celery</option>\n                    <option value=\"chard\">chard</option>\n                    <option value=\"cherries\">cherries</option>\n                    <option value=\"cilantro\">cilantro</option>\n                    <option value=\"cucumbers\">cucumbers</option>\n                    <option value=\"eggplants\">eggplants</option>\n                    <option value=\"eggs\">eggs</option>\n                    <option value=\"figs\">figs</option>\n                    <option value=\"garlic\">garlic</option>\n                    <option value=\"grapes\">grapes</option>\n                    <option value=\"kale\">kale</option>\n                    <option value=\"leeks\">leeks</option>\n                    <option value=\"lemons\">lemons</option>\n                    <option value=\"lettuce\">lettuce</option>\n                    <option value=\"limes\">limes</option>\n                    <option value=\"onions\">onions</option>\n                    <option value=\"oranges\">oranges</option>\n                    <option value=\"bellpeppers\">peppers - bell</option>\n                    <option value=\"hotpeppers\">peppers - hot</option>\n                    <option value=\"persimmons\">persimmons</option>\n                    <option value=\"plums\">plums</option>\n                    <option value=\"potatoes\">potatoes</option>\n                    <option value=\"pumpkins\">pumpkins</option>\n                    <option value=\"radishes\">radishes</option>\n                    <option value=\"spinach\">spinach</option>\n                    <option value=\"squashes\">squashes</option>\n                    <option value=\"sweetpotatoes\">sweet potatoes</option>\n                    <option value=\"tomatoes\">tomatoes</option>\n                    <option value=\"turnips\">turnips</option>\n                </select>\n                <input\n                    className=\"form-input\"\n                    placeholder=\"quantity\"\n                    name=\"quantity\"\n                    type=\"number\"\n                    value={formState.quantity}\n                    onChange={handleChange}\n                />\n                <input\n                    className=\"form-input\"\n                    placeholder=\"photo\"\n                    name=\"photo\"\n                    type=\"text\"\n                    value={formState.photo}\n                    onChange={handleChange}\n                />\n                <input\n                    className=\"form-input\"\n                    placeholder=\"description\"\n                    name=\"description\"\n                    type=\"text\"\n                    value={formState.description}\n                    onChange={handleChange}\n                />\n                <button\n                    className=\"btn btn-block btn-info\"\n                    style={{ cursor: 'pointer' }}\n                    type=\"submit\"\n                >\n                    Submit\n                </button>\n\n            </form>\n\n            {error && (\n                <div className=\"my-3 p-3 bg-danger text-white\">\n                    {error.message}\n                </div>\n            )}\n           \n        </>\n    )\n}\n\nexport default AddVeggieForm","/Users/laura/Desktop/agrarian-revolution/client/src/components/VeggiesList.js",["90"],"/Users/laura/Desktop/agrarian-revolution/client/src/utils/queries.js",[],"/Users/laura/Desktop/agrarian-revolution/client/src/utils/mutations.js",[],"/Users/laura/Desktop/agrarian-revolution/client/src/utils/auth.js",[],"/Users/laura/Desktop/agrarian-revolution/client/src/utils/icons.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":16,"nodeType":"97","messageId":"98","endLine":1,"endColumn":24},{"ruleId":"95","severity":1,"message":"99","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"100","line":10,"column":43,"nodeType":"97","messageId":"98","endLine":10,"endColumn":48},{"ruleId":"95","severity":1,"message":"101","line":10,"column":50,"nodeType":"97","messageId":"98","endLine":10,"endColumn":62},{"ruleId":"102","severity":1,"message":"103","line":21,"column":28,"nodeType":"104","messageId":"105","endLine":21,"endColumn":39},{"ruleId":"95","severity":1,"message":"99","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"106","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":23},{"ruleId":"95","severity":1,"message":"107","line":16,"column":35,"nodeType":"97","messageId":"98","endLine":16,"endColumn":39},{"ruleId":"95","severity":1,"message":"108","line":10,"column":11,"nodeType":"97","messageId":"98","endLine":10,"endColumn":17},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Popup' is defined but never used.","'useMapEvents' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'QUERY_VEGGIES' is defined but never used.","'data' is assigned a value but never used.","'styles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]